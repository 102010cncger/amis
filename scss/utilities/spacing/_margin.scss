@mixin margin-spacing($spacing: $spacing, $prefix: '.', $suffix: '') {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m#{$suffix} {
        margin: $value;
      }
    } @else {
      #{$prefix}m-#{'' + selector-escape($name)}#{$suffix} {
        margin: $value;
      }
    }
  }
  #{$prefix}m-auto#{$suffix} {
    margin: auto;
  }
}

@mixin margin-negative-spacing($spacing: $spacing, $prefix: '.', $suffix: '') {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-n#{$suffix} {
        margin: $value * -1;
      }
    } @else {
      #{$prefix}m-n-#{'' + selector-escape($name)}#{$suffix} {
        margin: $value * -1;
      }
    }
  }
}

@mixin margin-x-spacing($spacing: $spacing, $prefix: '.', $suffix: '') {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-x#{$suffix} {
        margin-left: $value;
        margin-right: $value;
      }
    } @else {
      #{$prefix}m-x-#{'' + selector-escape($name)}#{$suffix} {
        margin-left: $value;
        margin-right: $value;
      }
    }
  }

  #{$prefix}m-x-auto#{$suffix} {
    margin-left: auto;
    margin-right: auto;
  }
}

@mixin margin-negative-x-spacing(
  $spacing: $spacing,
  $prefix: '.',
  $suffix: ''
) {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-n-x#{$suffix} {
        margin-left: $value * -1;
        margin-right: $value * -1;
      }
    } @else {
      #{$prefix}m-n-x-#{'' + selector-escape($name)}#{$suffix} {
        margin-left: $value * -1;
        margin-right: $value * -1;
      }
    }
  }
}

@mixin margin-y-spacing($spacing: $spacing, $prefix: '.', $suffix: '') {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-y#{$suffix} {
        margin-top: $value;
        margin-bottom: $value;
      }
    } @else {
      #{$prefix}m-y-#{'' + selector-escape($name)}#{$suffix} {
        margin-top: $value;
        margin-bottom: $value;
      }
    }
  }

  #{$prefix}m-y-auto#{$suffix} {
    margin-top: auto;
    margin-bottom: auto;
  }
}

@mixin margin-negative-y-spacing(
  $spacing: $spacing,
  $prefix: '.',
  $suffix: ''
) {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-n-y#{$suffix} {
        margin-top: $value * -1;
        margin-bottom: $value * -1;
      }
    } @else {
      #{$prefix}m-n-y-#{'' + selector-escape($name)}#{$suffix} {
        margin-top: $value * -1;
        margin-bottom: $value * -1;
      }
    }
  }
}

@mixin margin-top-spacing($spacing: $spacing, $prefix: '.', $suffix: '') {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-t#{$suffix} {
        margin-top: $value;
      }
    } @else {
      #{$prefix}m-t-#{'' + selector-escape($name)}#{$suffix} {
        margin-top: $value;
      }
    }
  }
}

@mixin margin-negative-top-spacing(
  $spacing: $spacing,
  $prefix: '.',
  $suffix: ''
) {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-n-t#{$suffix} {
        margin-top: $value * -1;
      }
    } @else {
      #{$prefix}m-n-t-#{'' + selector-escape($name)}#{$suffix} {
        margin-top: $value * -1;
      }
    }
  }
}

@mixin margin-right-spacing($spacing: $spacing, $prefix: '.', $suffix: '') {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-r#{$suffix} {
        margin-right: $value;
      }
    } @else {
      #{$prefix}m-r-#{'' + selector-escape($name)}#{$suffix} {
        margin-right: $value;
      }
    }
  }
}

@mixin margin-negative-right-spacing(
  $spacing: $spacing,
  $prefix: '.',
  $suffix: ''
) {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-n-r#{$suffix} {
        margin-right: $value * -1;
      }
    } @else {
      #{$prefix}m-n-r-#{'' + selector-escape($name)}#{$suffix} {
        margin-right: $value * -1;
      }
    }
  }
}

@mixin margin-bottom-spacing($spacing: $spacing, $prefix: '.', $suffix: '') {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-b#{$suffix} {
        margin-bottom: $value;
      }
    } @else {
      #{$prefix}m-b-#{'' + selector-escape($name)}#{$suffix} {
        margin-bottom: $value;
      }
    }
  }
}

@mixin margin-negative-bottom-spacing(
  $spacing: $spacing,
  $prefix: '.',
  $suffix: ''
) {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-n-b#{$suffix} {
        margin-bottom: $value * -1;
      }
    } @else {
      #{$prefix}m-n-b-#{'' + selector-escape($name)}#{$suffix} {
        margin-bottom: $value * -1;
      }
    }
  }
}

@mixin margin-left-spacing($spacing: $spacing, $prefix: '.', $suffix: '') {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-l#{$suffix} {
        margin-left: $value;
      }
    } @else {
      #{$prefix}m-l-#{'' + selector-escape($name)}#{$suffix} {
        margin-left: $value;
      }
    }
  }
}

@mixin margin-negative-left-spacing(
  $spacing: $spacing,
  $prefix: '.',
  $suffix: ''
) {
  @each $name, $value in $spacing {
    @if $name == default {
      #{$prefix}m-n-l#{$suffix} {
        margin-left: $value * -1;
      }
    } @else {
      #{$prefix}m-n-l-#{'' + selector-escape($name)}#{$suffix} {
        margin-left: $value * -1;
      }
    }
  }
}

@mixin make-margins($prefix: '.', $suffix: '') {
  @include margin-spacing($spacing, $prefix, $suffix);
  @include margin-negative-spacing($spacing, $prefix, $suffix);
  @include margin-x-spacing($spacing, $prefix, $suffix);
  @include margin-negative-x-spacing($spacing, $prefix, $suffix);
  @include margin-y-spacing($spacing, $prefix, $suffix);
  @include margin-negative-y-spacing($spacing, $prefix, $suffix);
  @include margin-top-spacing($spacing, $prefix, $suffix);
  @include margin-negative-top-spacing($spacing, $prefix, $suffix);
  @include margin-right-spacing($spacing, $prefix, $suffix);
  @include margin-negative-right-spacing($spacing, $prefix, $suffix);
  @include margin-bottom-spacing($spacing, $prefix, $suffix);
  @include margin-negative-bottom-spacing($spacing, $prefix, $suffix);
  @include margin-left-spacing($spacing, $prefix, $suffix);
  @include margin-negative-left-spacing($spacing, $prefix, $suffix);
}

@include make-margins();
@each $deivce in map-keys($devices) {
  @include media-device($deivce) {
    @include make-margins('.' + selector-escape($deivce + ':'));
  }
}

// @include bg-colors('.' + selector-escape('hover:'), ':hover');
// @include bg-colors('.' + selector-escape('active:'), '.is-active');
// @include bg-colors('.' + selector-escape('disabled:'), '.is-disabled');
// @include bg-colors('.group:hover .' + selector-escape('group-hover:'));
